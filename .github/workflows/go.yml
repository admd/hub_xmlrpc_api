name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Run a one-line script
      run: echo Hello, world!
    - name: Tests
      run: |
            pwd 
            ls
            go get -u github.com/admd/hub_xmlrpc_api
    - name: Build
      run: go build main.go
    - name: Package
      run: |
           pwd
           ls
           echo Building
           tar cvzf hub-api-linux-amd64.tar.gz main 
            echo Built
           ls
           
    - name: Create a Release
      uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: 'Octocat2'
         release_name: 'billa2' 
         body: 'just testing2'
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: hub-api-linux-amd64.tar.gz
          asset_name: my-artifact.zip
          asset_content_type: application/zip    
